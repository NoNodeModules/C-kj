{"remainingRequest":"D:\\桌面收纳盒\\codetext\\kjsuper\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面收纳盒\\codetext\\kjsuper\\src\\views\\category\\Category.vue?vue&type=style&index=0&id=1a0c5ce5&scoped=true&lang=css&","dependencies":[{"path":"D:\\桌面收纳盒\\codetext\\kjsuper\\src\\views\\category\\Category.vue","mtime":1617451697740},{"path":"D:\\桌面收纳盒\\codetext\\kjsuper\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\桌面收纳盒\\codetext\\kjsuper\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\桌面收纳盒\\codetext\\kjsuper\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\桌面收纳盒\\codetext\\kjsuper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\桌面收纳盒\\codetext\\kjsuper\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm5hdmJhcnsNCiAgcG9zaXRpb246IGZpeGVkOw0KICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNTUsIDEyOSwgMTUyKSA7DQogIHRvcDogMDsNCiAgbGVmdDogMDsNCiAgcmlnaHQ6IDA7DQogIHdpZHRoOiAxMDAlOw0KICBjb2xvcjogI2ZmZjsNCiAgei1pbmRleDogOTk5Ow0KfQ0KLmNhdGVnb3J5aXRlbXsNCiAgbWFyZ2luLXRvcDogNDRweDsNCiAgZGlzcGxheTogZmxleDsNCn0NCi50YWItY29udHJvbHsNCiAgd2lkdGg6IDEwMCU7DQp9DQouc2Nyb2xsd2t7DQogIGhlaWdodDogY2FsYygxMDB2aCAtIDQ1cHggLSA0MHB4IC0gNTBweCk7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQo="},{"version":3,"sources":["Category.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Category.vue","sourceRoot":"src/views/category","sourcesContent":["<template>\r\n  <div class=\"category\">\r\n    <!-- 商品分类标题 -->\r\n    <nav-bar class=\"navbar\">\r\n      <div slot=\"center\">商品分类</div>\r\n    </nav-bar>\r\n\r\n    <div class=\"categoryitem\">\r\n      <category-list :categoryList=\"categoryList\" @liClick=\"liClick\"></category-list>\r\n      <div style=\"width: 100%;\">\r\n        <tab-control :titles=\"['流行','新款','精选']\" class=\"tab-control\" @tabClick='tabClick'></tab-control>\r\n        <scroll class=\"scrollwk\" ref=\"TabScroll\">\r\n          <category-item :subcategory=\"subcategory\" @imgload=\"imgload\"></category-item>\r\n          <category-item-tab :categoryitemtab='categoryitemtab' :categorytab=\"categorytab\"></category-item-tab>\r\n        </scroll>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getCategory,getSubcategory,getCategoryDetail,POP, SELL, NEW} from '../../network/category'\r\nimport {debounce} from '../../common/utils.js'\r\n\r\nimport NavBar from '../../components/common/navbar/NavBar'\r\nimport Scroll from '../../components/common/scroll/Scroll'\r\nimport TabControl from '../../components/content/tabControl/TabControl'\r\nimport CategoryList from './childComps/CategoryList'\r\nimport CategoryItem from './childComps/CategoryItem'\r\nimport CategoryItemTab from './childComps/CategoryItemTab'\r\n\r\nexport default {\r\n  name:'Category',\r\n  data() {\r\n    return {\r\n      categoryAll:[],   //全部数据\r\n      categoryList:[],  //list左边分类\r\n      maitKey:3627,\r\n      subcategory:{},   //存入分类对应数据  上面部分\r\n      categoryData:{},\r\n      currentIndex:-1,\r\n      categoryitemtab:{},   //tab数据\r\n      categorytab:'pop',        //['流行','新款','精选'] 点击值\r\n      tab:{}                 //剥离的数据\r\n    }\r\n  },\r\n  created() {\r\n    // 获取初始化数据\r\n    this._getCategory()\r\n    this.getSubcategory(this.maitKey)  //获取正在流行数据 \r\n\r\n  },\r\n  methods: {\r\n    _getCategory(){\r\n      getCategory().then(res => {\r\n          // 1.获取分类数据\r\n          // console.log(res)\r\n          this.categoryAll = res\r\n          this.categoryList = this.categoryAll.data.data.category.list\r\n          // console.log(this.categoryList)\r\n        \r\n\r\n        for (let i = 0; i < this.categoryList.length; i++) {\r\n            this.categoryData[i] = {\r\n              subcategories: {},\r\n              categoryDetail: {\r\n                'pop': [],\r\n                'new': [],\r\n                'sell': []\r\n              }\r\n            }\r\n            // console.log(this.categoryData)\r\n          }\r\n          // 3.请求第一个分类的数据\r\n          this._getSubcategories(0)\r\n\r\n          // tab 初始数据 正在流行  index=0\r\n          this.categoryitemtab = this.categoryData[0].categoryDetail\r\n          // console.log(this.categoryitemtab)\r\n\r\n      })\r\n\r\n\r\n\r\n    },\r\n    _getSubcategories(index) {\r\n        this.currentIndex = index;\r\n\t\t    const mailKey = this.categoryList[index].maitKey;\r\n        getSubcategory(mailKey).then(res => {\r\n          this.categoryData[index].subcategories = res.data\r\n          this.categoryData = {...this.categoryData}\r\n          this._getCategoryDetail(POP)\r\n          this._getCategoryDetail(SELL)\r\n          this._getCategoryDetail(NEW)\r\n        })\r\n      },\r\n      _getCategoryDetail(type) {\r\n\t\t    // 1.获取请求的miniWallkey\r\n        const miniWallkey = this.categoryList[this.currentIndex].miniWallkey;\r\n        // 2.发送请求,传入miniWallkey和type\r\n\t\t    getCategoryDetail(miniWallkey, type).then(res => {\r\n\t\t      // 3.将获取的数据保存下来\r\n\t\t      this.categoryData[this.currentIndex].categoryDetail[type] = res\r\n          this.categoryData = {...this.categoryData}\r\n        })\r\n      },\r\n\r\n\r\n\r\n\r\n    // 使用maitKey 获得对应类数据\r\n    getSubcategory(maitKey){\r\n      getSubcategory(maitKey).then(res => {\r\n        // console.log(res)\r\n        this.subcategory = res.data.data\r\n        // console.log(this.subcategory);\r\n\r\n        this.$refs.TabScroll.refresh()\r\n\r\n      })\r\n    },\r\n    refresh(){\r\n      this.$refs.TabScroll.refresh()\r\n      // console.log('refresh')\r\n    },\r\n    // 点击左边分类 获得maitKey\r\n    liClick(index){\r\n      this.maitKey=this.categoryList[index].maitKey\r\n      // console.log('该分类端口maitKey值'+this.maitKey)\r\n      this.getSubcategory(this.maitKey)\r\n\r\n\r\n      this._getSubcategories(index)\r\n\r\n      console.log(index)\r\n\r\n      // 加载tab数据   将数据存入categoryitemtab\r\n      this.categoryitemtab = this.categoryData[index].categoryDetail\r\n      // console.log(this.categoryData[index].categoryDetail)\r\n      // console.log(this.categoryitemtab)\r\n    },\r\n    imgload(){\r\n      // console.log('加载')\r\n      this.refresh()\r\n      \r\n    },\r\n\r\n\r\n    tabClick(index){\r\n      switch(index){\r\n        case 0:\r\n          this.categorytab = 'pop'\r\n          break\r\n        case 1:\r\n          this.categorytab = 'new'\r\n          break\r\n        case 2:\r\n          this.categorytab = 'sell'\r\n          break\r\n      }\r\n      // console.log(this.categorytab)\r\n      this.tab = this.categoryitemtab[this.categorytab]\r\n      // console.log(this.tab);\r\n      // 进行数据剥离  \r\n      \r\n    },\r\n  },\r\n  components:{\r\n    CategoryList,\r\n    Scroll,\r\n    NavBar,\r\n    TabControl,\r\n    CategoryItem,\r\n    CategoryItemTab\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.navbar{\r\n  position: fixed;\r\n  background-color:rgb(255, 129, 152) ;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  color: #fff;\r\n  z-index: 999;\r\n}\r\n.categoryitem{\r\n  margin-top: 44px;\r\n  display: flex;\r\n}\r\n.tab-control{\r\n  width: 100%;\r\n}\r\n.scrollwk{\r\n  height: calc(100vh - 45px - 40px - 50px);\r\n  overflow: hidden;\r\n}\r\n</style>"]}]}